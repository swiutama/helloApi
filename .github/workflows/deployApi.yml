name: Deploy API

on:
  workflow_dispatch:
  push:
    branches:
        - master

env:
  AZURE_WEBAPP_NAME: "onelabwebapp"
      
jobs:
  build:
    name: build and scan
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: install .net core
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: 8.0.x
  
      - name: install depedencies
        run: dotnet restore ./helloApi/helloApi.csproj
  
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"swiutama_helloApi" /o:"swiutama" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build ./helloApi/helloApi.csproj --configuration Release --no-restore
          dotnet publish ./helloApi/helloApi.csproj --configuration Release --output ./publish
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
    #   - uses: actions/checkout@v4
    #     with:
    #         fetch-depth: 0
    #   - name: sonarcloud scan
    #     uses: sonarsource/sonarcloud-github-action@v2
    #     with:
    #         args: >
    #             -Dsonar.organization=${{ secrets.SONARCLOUD_ORGANIZATION_KEY }}
    #             -Dsonar.projectKey=${{ secrets.SONARCLOUD_PROJECT_KEY }}
    #     env:
    #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            

    #   - name: build 
    #     run: 

    #   - name: publish
    #     run: dotnet publish ./helloApi/helloApi.csproj --configuration Release --output ./publish

      - name: deploy to azure web app
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.API_PUBLISH_SECRET }}
          package: ./publish